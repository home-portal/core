{"version":3,"sources":["../../ui-traffic/frontend/TrafficPage.vue","index.js"],"names":["Vue","HomePortal","dependencies","vue","registerPage","name","module","showInQuickLaunch","caption","icon","mountDiv","el","render","h","TrafficPage","$mount","$el"],"mappings":";AAgCA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAHA,IAAA,EAAA,WAAA,aAAA,OACA,EAAA,WAAA,aAAA,KAEA,EAAA,CACA,KAAA,WACA,MAAA,CACA,SAAA,GACA,IAAA,KACA,kBAAA,KACA,mBAAA,KACA,KAAA,IACA,SAAA,MAIA,QAAA,CACA,eAAA,WAAA,IAAA,EAAA,KACA,OAAA,IAAA,QAAA,SAAA,GACA,OAAA,eAAA,WACA,QAAA,IAAA,2BACA,KAEA,WAAA,eACA,+CAAA,OAAA,EAAA,SAAA,OADA,gCAMA,UAAA,WACA,KAAA,IAAA,IAAA,OAAA,KAAA,IAAA,KAAA,IAAA,cAAA,QAAA,CACA,OAAA,KAAA,SAAA,OACA,KAAA,KAAA,SAAA,KAEA,OAAA,CACA,CACA,YAAA,MACA,YAAA,MACA,QAAA,CACA,CAAA,kBAAA,GACA,CAAA,WAAA,IACA,CAAA,UAAA,IACA,CAAA,MAAA,IACA,CAAA,IAAA,aAGA,CACA,YAAA,MACA,YAAA,SACA,QAAA,CAAA,CAAA,WAAA,aAKA,IAAA,OAAA,KAAA,cACA,OAAA,KAAA,KAEA,KAAA,SAAA,aAAA,KAAA,SAAA,YAAA,UACA,KAAA,kBAAA,IAAA,OAAA,KAAA,kBACA,KAAA,mBAAA,IAAA,OAAA,KAAA,mBACA,KAAA,mBAAA,OAAA,KAAA,OAIA,gBAAA,WAAA,IAAA,EAAA,KACA,EAAA,CACA,OAAA,KAAA,SAAA,YAAA,YACA,YAAA,KAAA,SAAA,YAAA,YACA,WAAA,OAAA,KAAA,WAAA,QACA,mBAAA,GAEA,KAAA,kBAAA,MAAA,EAAA,SAAA,EAAA,GACA,GAAA,OAAA,KAAA,iBAAA,IACA,EAAA,OAAA,IAAA,EAAA,OAAA,GAAA,KAAA,KACA,EAAA,OAAA,GAAA,KAAA,GAAA,WACA,EAAA,KAAA,EAAA,OAAA,GAAA,KAAA,GAAA,SAAA,OACA,EAAA,OAAA,GAAA,KAAA,GAAA,WACA,EAAA,SAAA,EAAA,OAAA,GAAA,KAAA,GAAA,SAAA,QAGA,EAAA,SAAA,YAAA,kBACA,EAAA,mBAAA,cAAA,GACA,WAAA,WACA,EAAA,IAAA,UAAA,EAAA,WAAA,QACA,EAAA,IAAA,QAAA,EAAA,WAAA,OACA,OAIA,QAAA,MAAA,iCAAA,OAAA,GAAA,OAMA,QAAA,WACA,KAAA,SAAA,WAAA,kBAAA,cACA,QAAA,IAAA,kBAAA,KAAA,WAGA,QAAA,WAAA,IAAA,EAAA,KACA,OAAA,KAAA,iBAAA,KAAA,WACA,EAAA,YAEA,EAAA,SAAA,aAAA,EAAA,SAAA,YAAA,SACA,EAAA,sBArGA,QAAA,QAAA;;;AC5BA,aAFA,IAAA,EAAA,EAAA,QAAA,sBAEA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAJA,IAAMA,EAAMC,WAAWC,aAAaC,IAIpCF,WAAWG,aAAa,CACvBC,KAAM,UACNC,OAAQ,aACRC,mBAAmB,EACnBC,QAAS,cACTC,KAAM,uBACNC,SAAU,SAAAC,GAAM,OAAA,IAAIX,EAAI,CAAEY,OAAQ,SAAAC,GAAKA,OAAAA,EAAEC,EAAD,YAAiBC,OAAOJ,GAAIK","file":"index.js","sourceRoot":"..\\..\\..\\..\\modules\\ui-traffic\\frontend","sourcesContent":["<template>\n\t<div class=\"page\">\n\t\t<div class=\"overlay\"></div>\n\t\t<div class=\"wrapper\">\n\t\t\t<div class=\"page-header\">\n\t\t\t\t<div class=\"title\">\n\t\t\t\t\t<span>Traffic map</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"back-button\" @click=\"broker.call('$router.goHome')\"></div>\n\t\t\t</div>\n\t\t\t<div class=\"page-content\">\n\t\t\t\t<div class=\"map\"></div>\n\t\t\t\t<div class=\"infobox\">\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<div class=\"title\">Time</div>\n\t\t\t\t\t\t<div class=\"value\">{{ time }}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<div class=\"title\">Distance</div>\n\t\t\t\t\t\t<div class=\"value\">{{ distance }}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\n// Get the dependencies from the core, so it won't be bundled into the module, too.\nconst moment = HomePortal.dependencies.moment;\nconst gsap = HomePortal.dependencies.gsap;\n\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\tsettings: {}, // mixin\n\t\t\tmap: null,\n\t\t\tdirectionsService: null,\n\t\t\tdirectionsRenderer: null,\n\t\t\ttime: \"-\",\n\t\t\tdistance: \"-\"\n\t\t};\n\t},\n\n\tmethods: {\n\t\tloadGoogleMaps() {\n\t\t\treturn new Promise(resolve => {\n\t\t\t\twindow.initTrafficMap = function () {\n\t\t\t\t\tconsole.log(\"Google maps API loaded.\");\n\t\t\t\t\tresolve();\n\t\t\t\t};\n\t\t\t\tHomePortal.loadScriptFile(\n\t\t\t\t\t`https://maps.googleapis.com/maps/api/js?key=${this.settings.apiKey}&callback=initTrafficMap`\n\t\t\t\t);\n\t\t\t});\n\t\t},\n\n\t\tcreateMap() {\n\t\t\tthis.map = new google.maps.Map(this.$el.querySelector(\".map\"), {\n\t\t\t\tcenter: this.settings.center,\n\t\t\t\tzoom: this.settings.zoom,\n\n\t\t\t\tstyles: [\n\t\t\t\t\t{\n\t\t\t\t\t\tfeatureType: \"all\",\n\t\t\t\t\t\telementType: \"all\",\n\t\t\t\t\t\tstylers: [\n\t\t\t\t\t\t\t{ invert_lightness: false },\n\t\t\t\t\t\t\t{ saturation: 20 },\n\t\t\t\t\t\t\t{ lightness: 10 },\n\t\t\t\t\t\t\t{ gamma: 0.5 },\n\t\t\t\t\t\t\t{ hue: \"#90C2DC\" }\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tfeatureType: \"poi\",\n\t\t\t\t\t\telementType: \"labels\",\n\t\t\t\t\t\tstylers: [{ visibility: \"off\" }]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t});\n\n\t\t\tconst trafficLayer = new google.maps.TrafficLayer();\n\t\t\ttrafficLayer.setMap(this.map);\n\n\t\t\tif (this.settings.routeToWork && this.settings.routeToWork.enabled) {\n\t\t\t\tthis.directionsService = new google.maps.DirectionsService();\n\t\t\t\tthis.directionsRenderer = new google.maps.DirectionsRenderer();\n\t\t\t\tthis.directionsRenderer.setMap(this.map);\n\t\t\t}\n\t\t},\n\n\t\tcalcRouteToWork() {\n\t\t\tconst request = {\n\t\t\t\torigin: this.settings.routeToWork.homeAddress,\n\t\t\t\tdestination: this.settings.routeToWork.workAddress,\n\t\t\t\ttravelMode: google.maps.TravelMode.DRIVING,\n\t\t\t\tdurationInTraffic: true\n\t\t\t};\n\t\t\tthis.directionsService.route(request, (result, status) => {\n\t\t\t\tif (status == google.maps.DirectionsStatus.OK) {\n\t\t\t\t\tif (result.routes[0] && result.routes[0].legs[0]) {\n\t\t\t\t\t\tif (result.routes[0].legs[0].duration)\n\t\t\t\t\t\t\tthis.time = result.routes[0].legs[0].duration.value;\n\t\t\t\t\t\tif (result.routes[0].legs[0].distance)\n\t\t\t\t\t\t\tthis.distance = result.routes[0].legs[0].distance.value;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.settings.routeToWork.showRoutesOnMap) {\n\t\t\t\t\t\tthis.directionsRenderer.setDirections(result);\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tthis.map.setCenter(this.mapOptions.center);\n\t\t\t\t\t\t\tthis.map.setZoom(this.mapOptions.zoom);\n\t\t\t\t\t\t}, 1000);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// TODO: show a notification\n\t\t\t\t\tconsole.error(`Unable to show route. Status: ${status}`, result);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\tcreated() {\n\t\tthis.settings = HomePortal.getModuleSettings(\"ui-traffic\");\n\t\tconsole.log(\"Module settings\", this.settings);\n\t},\n\n\tmounted() {\n\t\treturn this.loadGoogleMaps().then(() => {\n\t\t\tthis.createMap();\n\n\t\t\tif (this.settings.routeToWork && this.settings.routeToWork.enabled)\n\t\t\t\tthis.calcRouteToWork();\n\t\t});\n\t}\n};\n</script>\n\n<style lang=\"scss\" scoped>\n$c: rgb(0, 181, 255); //var(--skyBlue);\n\n.page {\n\tbackground-image: url(\"./images/background.jpg\");\n}\n\n.overlay {\n\tbackground-color: rgba($c, 0.25);\n}\n\n.page-content {\n\tmargin: 2em;\n\tdisplay: flex;\n\n\t.map {\n\t\tflex: 4;\n\t\tborder-radius: var(--panelRadius);\n\t}\n\n\t.infobox {\n\t\tmargin-left: 1em;\n\t\tflex: 1;\n\t\tbackground-color: rgba(black, 0.5);\n\t\tborder-radius: var(--panelRadius);\n\n\t\t.row {\n\t\t\tfont-size: 1;\n\t\t\tline-height: 1.6;\n\t\t\tmargin: 30px 0;\n\n\t\t\t.title {\n\t\t\t\ttext-align: center;\n\t\t\t\tfont-weight: 300;\n\t\t\t\tcolor: lighten($c, 20%);\n\t\t\t} // .title\n\n\t\t\t.value {\n\t\t\t\ttext-align: center;\n\t\t\t\tfont-weight: 600;\n\t\t\t} // .value\n\t\t}\n\t}\n}\n</style>\n","const Vue = HomePortal.dependencies.vue;\n\nimport TrafficPage from \"./TrafficPage.vue\";\n\nHomePortal.registerPage({\n\tname: \"traffic\",\n\tmodule: \"ui-traffic\",\n\tshowInQuickLaunch: true,\n\tcaption: \"Traffic Map\",\n\ticon: \"fa fa-globe-americas\",\n\tmountDiv: el => new Vue({ render: h => h(TrafficPage) }).$mount(el).$el\n});\n"]}